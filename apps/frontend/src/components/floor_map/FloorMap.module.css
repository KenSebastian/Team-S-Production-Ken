@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap");

body {
  font-family: "Poppins", sans-serif;
  font-size: 14px;
}

.pathNotFoundBox {
  background-color: red;
  color: white;
  padding: 10px;
  margin-top: 10px;
  border-radius: 5px;
  text-align: center;
}
.wholePage {
  background: #f1f1f1;
  position: fixed;
  padding: 0;
  top: 180px;
  left: 0;
  width: 100vw;
  height: 100vh;
  min-height: 580px;
  min-width: 700px;
}

.container {
  padding: 0;
  margin: 0;
  position: absolute;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  height: calc(100% - 100px);
}

.signInForm {
  padding-left: 30px;
  padding-right: 30px;
  display: flex;
  flex-direction: column;
  width: 380px; /* Adjust the width as needed */
  min-height: calc(100%);
  max-height: calc(100%);
  background: #f1f1f1;
  position: relative;
  z-index: 300;
  margin-top: -200px;
  margin-bottom: 10px;
  /* Adjust this value as needed to control the distance from the top */
}

.tips {
  position: absolute;
  right: 14px;
  top: 14px;
  color: #1a1a1a;
}

.floorButtonsContainer {
  /* hide scrollbar but allow scrolling */
  /* Hide scrollbar in IE/Edge */

  -ms-overflow-style: none;

  /* WebKit (Chrome, Safari, etc.) */
  ::-webkit-scrollbar {
    width: 10px; /* width of the scrollbar */
  }

  /* Track */
  ::-webkit-scrollbar-track {
    background: #f1f1f1; /* color of the track */
  }

  /* Handle */
  ::-webkit-scrollbar-thumb {
    background: #003b9c; /* color of the thumb */
  }

  width: calc(100% + 60px); /* Add twice the padding to stretch fully */
  margin-left: -30px; /* Offset the padding on the left */
  margin-right: -30px;
  max-height: 400px;
}

.mapArea {
  height: calc(
    100vh + 110px
  ); /* Subtract the navbar height or any padding you may have */
  width: 100vw;
  position: relative;
  overflow: hidden;
}

.FloorSequence {
  position: absolute;
  top: 10px; /* Keeps it 20px from the top */
  right: 20px; /* Anchors the container to the right, 20px from the edge */
  z-index: 5; /* Ensures it stays on top of other content */
  background: transparent; /* Semi-transparent background for better visibility */
  border-radius: 5px; /* Rounded corners for aesthetics */
  display: flex; /* Ensures the contents are laid out in a row */
  flex-direction: row-reverse; /* Reverses the order of flex items to extend to the left */
  justify-content: flex-start; /* Aligns content to the right */
  padding: 8px; /* Padding around the content */
}

.hmap-image {
  height: 100%; /* Make the image fill the container height */
  width: auto; /* Adjust width automatically */
  object-fit: cover; /* Cover the area without losing aspect ratio */
  max-width: none; /* Allow the width to go beyond 100% if necessary */
}

.transformWrapper {
  width: 100%;
  height: 100%;
}

.transformComponent {
  position: relative; /* Establish a positioning context for the dots */
  width: 100%;
  height: 100%;
}

.mapDot {
  position: absolute;
  width: 9px;
  height: 9px;
  border-radius: 50%;
  transform: translate(-50%, -50%);
  z-index: 3;
}

.dotsContainer {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
}

.boldtag {
  margin-top: 30px;
  margin-bottom: 10px;
  text-align: left;
  font-weight: bold;
  color: black;
}
.boldtag2 {
  margin-bottom: -20px;
  text-align: center;
  font-weight: bold;
  color: black;
}

.container .directionsBox {
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: #003b9c;
  color: white;
  font-weight: bold;
  line-height: 48px;

  left: calc(-17%);
  position: relative;
  box-sizing: border-box;
  text-align: center;

  font-size: 20px;
}

.directionsBox {
  width: 405px;
  margin-top: 20px;
}

@keyframes moveDottedLine {
  to {
    stroke-dashoffset: -10;
  }
}

.line {
  stroke-dasharray: 3;
  stroke-dashoffset: 20;
  animation: moveDottedLine 1s linear infinite;
  z-index: 100;
}

.vertline {
  stroke-dasharray: 5;
  stroke-dashoffset: 20;
  animation: moveDottedLine 1s linear infinite;
  z-index: 100;
}

/*.vertLine {*/
/*    transform: skew(20deg) rotate(-20deg) rotateX(-40deg);*/
/*}*/

.mapDot.small {
  width: 1px;
  height: 1px;
  z-index: 3;
}

.pathListContainer {
  max-height: 150px; /* Set a maximum height for the list */
  overflow-y: auto; /* Enable vertical scrolling */

  /* Adjust as needed */
  padding: 5px; /* Add padding for better readability */
}

.pathList {
  list-style-type: none; /* Remove default list styles */
  padding-left: 0; /* Remove default left padding */
}

.csvButton {
  bottom: 0;
  width: 360px;
  position: fixed;
  background-color: #003b9c;
  color: white;
  font-weight: bold;
  left: -20px;
}

.mbDiv {
  position: absolute;
  bottom: 0;
}

.floorSwitchText {
  font-weight: bold;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 7.5px;
  color: black;
}

.floorSwitcherContainer {
  position: absolute;
  top: 10px;
  left: 10px;
  padding: 5px;
  z-index: 10; /* Ensure it's above the map */
}

.multifloorNode {
  position: absolute;
  width: 10px;
  height: 10px;
  border-radius: 50%;
  transform: translate(-50%, -50%);
}

@keyframes pulse {
  0% {
    transform: scale(1) translate(-50%, -50%);
    opacity: 1;
  }
  50% {
    transform: scale(1.5) translate(-33%, -33%);
    opacity: 0.9;
  }
  100% {
    transform: scale(1) translate(-50%, -50%);
    opacity: 1;
  }
}

.endNodeAnimation {
  animation: pulse 1.5s infinite;

  transform: translate(-50%, -50%);
}

.mMap {
  position: absolute;
  right: -50%;
  top: 47%;
  width: min-content;
  height: min-content;
  transition: right 0.3s ease;
}

.showMMap {
  right: 0;
}

.mMapbox {
  flex: 1;
  display: flex;
  color: black;
  align-items: center; /* Center the contents vertically */
  justify-content: flex-start; /* Aligns the switch to the start */
  padding-left: 20px; /* Adds some padding on the left */
  width: 100%; /* Full width of the container */
  /* Center the switch horizontally */
  margin-bottom: 10px; /* Space between switch and select */
}

.MapButtons {
  position: absolute;
  top: 20px; /* Adjust to place it right at the top */
  left: 20px; /* Right aligned */
  width: 210px; /* Auto width based on content */
  z-index: 7; /* Ensure it is above the TransformComponent */
  display: flex;

  flex-direction: column; /* Stack children vertically */
  justify-content: flex-start;
  padding: 10px; /* Adds some spacing around the controls */
  background: rgba(241, 241, 241, 0.7); /* Semi-transparent background */
  border: 1px solid black; /* Black border */
  border-radius: 5px; /* Rounded corners */
}

.MapKey {
  position: absolute; /* Places it above the map */
  bottom: -75%; /* Places it off screen for transformation */
  left: 20px; /* Left aligned */
  width: 265px; /* Can be altered for longer key items */
  z-index: 4; /* Ensure it is above the TransformComponent */
  display: grid; /* For keeping each key */
  grid-template-columns: 30px 200px;

  padding: 15px; /* Adds some spacing around the controls */
  background: rgb(255, 255, 255); /* Semi-transparent background */
  border: 1px solid black; /* Black border */
  border-radius: 5px; /* Rounded corners */
  transition: bottom 0.3s ease; /* Transform effect to make it come from the bottom */
}

.MapKeyItem {
  color: #003b9c;
  font-size: 21px;
  text-align: start; /* Sets the text to all left-align */
  margin-left: 10px; /* Gives the text some room on the left */
  margin-bottom: 5px; /* Puts line spacing between each key entry */
  font-family: Jaldi, sans-serif;
}

.MapKeyIcon {
  width: 25px;
  height: 25px;
}

.ShowMapKey {
  bottom: 200px; /* To be placed 200px from bottom once triggered */
}

.Select {
  display: flex;
  width: 100%; /* Full width of the container */
  justify-content: center; /* Center the select horizontally */
}
.floorDirectionsContainer {
  max-height: 400px; /* Default max-height */
  overflow-y: auto;
  overflow-x: hidden;
}

/* Medium devices */
@media (min-height: 500px) and (max-height: 700px) {
  .floorDirectionsContainer {
    max-height: calc(30vh); /* 60% of the viewport height */
  }
}

/* Larger devices */
@media (min-height: 775px) {
  .floorDirectionsContainer {
    max-height: calc(39vh); /* 70% of the viewport height */
  }
}

.floorVoiceSettingContainer {
  max-height: 200px;
  overflow-y: auto;
  overflow-x: hidden;
}

.keyButton {
  all: unset;
  cursor: pointer;
  width: 30px;
  height: 30px;
  padding: -1px;
  background-color: transparent;
  border: none;
}
.keyButton:hover {
  border: 2px solid #163a95;
  border-radius: 20px;
}
.keyButtonText:hover {
  border: 2px solid #163993;
  border-radius: 20px;
}

.keyButtonText {
  all: unset;
  cursor: pointer;
  height: 30px;
  padding: -1px;
}

.threeDpath {
  position: absolute;
  bottom: -11vh; /* Adjust to place it right at the top */
  left: 45vw; /* Right aligned */
  z-index: 4;
}

.threeD {
  height: 100%;
  width: 100%;
  z-index: 6;
  left: 0px;
  top: 0px;
  position: relative;
}

.showTreeD {
  z-index: 5;
}

.outerDiv {
  height: 100vh;
  width: 65vw;
  position: relative;
  display: grid;
  place-items: center;
  border-left: 1px solid black;
}

.ll2,
.ll1,
.f1,
.f2,
.f3 {
  position: absolute;
  height: 40vh;
  aspect-ratio: 25/17;
  width: auto;
  transform: rotateX(40deg) rotate(20deg) skew(-20deg);
  z-index: 12;
}

.tdDotsContainer {
  width: 65vw;
  height: 100vh;
  left: 0;
  top: 0;
  position: absolute;
  z-index: 6;
}

.mmimg {
  position: relative;
  z-index: 1;
  width: auto; /* or any custom size */
  height: 100%;
  object-fit: contain;
  border-radius: 15px;
  border: 3px solid #6fb49f;
}

.tdimg {
  border: solid 1px lavender;
  aspect-ratio: 25 / 17;
  height: 100%;
  width: 100%;
}

.micButton {
  margin-top: 10px;
  background-color: #163a95;
  padding-bottom: 5px;
  padding-top: 5px;
}

.clearButtonStuff {
  margin-top: 5px;
  display: flex; /* Enables flexbox layout */
  justify-content: space-between; /* Distributes space between items */
  align-items: center; /* Aligns items vertically at the center */
}

.clearButton {
  width: 250px;
}

.myCustomButton:focus,
.clearButton:focus,
.micButton:focus {
  outline: none !important; /* Using !important to ensure override */
}

.keyButton:focus,
.keyButtonText:focus {
  outline: none;
}

.keyButton:hover {
  box-shadow: 0 0 0 2px #163a95; /* Add a 2px blue shadow on hover */
  border-radius: 20px;
}

.keyButtonText:hover {
  box-shadow: 0 0 0 2px #163993; /* Add a 2px darker blue shadow on hover */
  border-radius: 20px;
}

.f3 {
  perspective: 72vh;
  translate: 0vh -15vw 0;
  z-index: 5;
}

.f2 {
  perspective: 71vh;
  translate: 0vh -7.5vw 0;
  z-index: 4;
}

.f1 {
  z-index: 3;
}

.ll1 {
  perspective: 69vh;
  translate: 0vh 7.5vw 0;
  z-index: 2;
}

.ll2 {
  perspective: 68vh;
  translate: 0vh 15vw 0;
  z-index: 1;
}
